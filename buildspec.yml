version: 0.2

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - CODEBUILD_GIT_BRANCH="$(git symbolic-ref HEAD --short 2>/dev/null || true)"
      - >
        if [ "${CODEBUILD_GIT_BRANCH}" = "" ]; then
          CODEBUILD_GIT_BRANCH="$(git branch -a --contains HEAD | sed -n 2p | awk '{ printf $1 }')"
          CODEBUILD_GIT_BRANCH=${CODEBUILD_GIT_BRANCH#remotes/origin/}
        fi
      - CODEBUILD_GIT_COMMIT="$(git log -1 --pretty=%H)"
      - CODEBUILD_GIT_AUTHOR="$(git log -1 --pretty=%an)"
      - CODEBUILD_GIT_AUTHOR_EMAIL="$(git log -1 --pretty=%ae)"
      - ECR_REPO="${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
      - MASTER_TAG=master-$(date +"%Y-%m-%d_%H-%M-%S")-${CODEBUILD_GIT_COMMIT}
      - echo "==> Environment Variables:"
      - printenv
      - echo Logging in to Amazon ECR...
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)

  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - make container-image

      # - echo Running Linting
      # - docker-compose -f deployment/docker-compose.yml run lint

      # - echo Running Tests
      # - docker-compose -f deployment/docker-compose.yml run test

      - echo Tagging docker image
      # Only tag with image tag (i.e. 'latest') if branch=master
      - >
        if [ "${CODEBUILD_GIT_BRANCH}" = "master" ]; then
          docker tag "infracloudio/botkube:latest" "${ECR_REPO}:${IMAGE_TAG}";
          docker tag "infracloudio/botkube:latest" "${ECR_REPO}:${MASTER_TAG}";
        fi
      - docker tag "infracloudio/botkube:latest" "${ECR_REPO}:${CODEBUILD_GIT_BRANCH}"
      - docker tag "infracloudio/botkube:latest" "${ECR_REPO}:${CODEBUILD_GIT_COMMIT}"

      - echo Pushing the Docker image...
      - >
        if [ "${CODEBUILD_GIT_BRANCH}" = "master" ];
        then
          docker push "${ECR_REPO}:${IMAGE_TAG}";
          docker push "${ECR_REPO}:${MASTER_TAG}";
        fi
      - docker push "${ECR_REPO}:${CODEBUILD_GIT_BRANCH}"
      - docker push "${ECR_REPO}:${CODEBUILD_GIT_COMMIT}"

  post_build:
    commands:
      - echo Build completed on `date`
      - >
        if [ "${CODEBUILD_BUILD_SUCCEEDING}" -eq 0 ];
        then
          echo "The build phase has failed."
          curl -X POST -H 'Content-type: application/json' --data "{'text':'BUILD FAILED: ${IMAGE_REPO_NAME}:${CODEBUILD_GIT_COMMIT}: ${CODEBUILD_BUILD_URL}'}" "${SLACK_HOOK_URL}"
        else
          echo "The build phase has succeeded."
          curl -X POST -H 'Content-type: application/json' --data "{'text':'Build Successful: ${IMAGE_REPO_NAME}:${CODEBUILD_GIT_COMMIT}: ${CODEBUILD_BUILD_URL}'}" "${SLACK_HOOK_URL}"
        fi